"Norway",
"Peru",
"Singapore",
"South Africa",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
countries %in% surexr::ifs_countries$Name
surexr::ifs_countries$Code[countries %in% surexr::ifs_countries$Name]
surexr::ifs_countries[countries %in% surexr::ifs_countries$Name]
surexr::ifs_countries$Name[countries %in% surexr::ifs_countries$Name]
countries %in% surexr::ifs_countries$Name
surexr::ifs_countries$Name[countries %in% surexr::ifs_countries$Name]
ifs_countries <- surexr::ifs_countries
ifs_countries$Name[countries %in% ifs_countries$Name]
rm(ifs_countries)
countries %in% surexr::ifs_countries$Name
which(countries %in% surexr::ifs_countries$Name)
surexr::ifs_countries$Name[which(countries %in% surexr::ifs_countries$Name)]
countries %in% surexr::ifs_countries$Name
surexr::ifs_countries$Name %in% countries
surexr::ifs_countries$Name[surexr::ifs_countries$Name %in% countries]
surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% countries]
iso_converter <- function(names){
vec <- names
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
}
iso_converter("Brazil")
iso_converter("Brazil")
iso_converter("Brazil")
iso_converter <- function(names){
vec <- names
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
}
iso_converter("Brazil")
iso_converter("Brazil")
iso_converter("Brazil","United States","Ulla")
iso_converter("Brazil","United States")
iso_converter(c("Brazil","United States"))
iso_converter(c("Brazil","United States","Ulla"))
names <- c("Brazil","Canada","Ulla")
vec<-names
surexr::ifs_countries$Name %in% vec
vec %in% surexr::ifs_countries$Name
which(vec %in% surexr::ifs_countries$Name)
vec %in% surexr::ifs_countries$Name == T
all(T,T,F)
all(T,T,t)
all(T,T,T)
all(vec %in% surexr::ifs_countries$Name)
vec <- c("Brazil","United States")
is.vector(vec, mode ="names")
is.vector(vec, mode ="character")
is.vector(vec, mode ="character")
all(vec %in% surexr::ifs_countries$Name)
vec[which(!vec %in% surexr::ifs_countries$Name)]
!vec %in% surexr::ifs_countries$Name
which(!vec %in% surexr::ifs_countries$Name)
vec <- c("Brazil","United States","Ulla")
!vec %in% surexr::ifs_countries$Name
which(!vec %in% surexr::ifs_countries$Name)
vec[which(!vec %in% surexr::ifs_countries$Name)]
iso_converter <- function(names){
vec <- names
if( is.vector(vec, mode ="character") ){
if( all(vec %in% surexr::ifs_countries$Name) ){
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
} else{
wrong_name <- vec[which(!vec %in% surexr::ifs_countries$Name)]
print(paste0(wrong_name,"is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: vec is not a vector of strings")
}
}
iso_converter(paises)
iso_converter(names = paises)
paises <- c("Brazil","United States")
iso_converter(names = paises)
paises <- c("Brazil","United States","Ulla")
iso_converter(names = paises)
iso_converter <- function(names){
vec <- names
if( is.vector(vec, mode ="character") ){
if( all(vec %in% surexr::ifs_countries$Name) ){
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
} else{
wrong_name <- vec[which(!vec %in% surexr::ifs_countries$Name)]
print(paste0(wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: vec is not a vector of strings")
}
}
paises <- c("Brazil","United States","Ulla")
iso_converter(names = paises)
iso_converter <- function(names){
vec <- names
if( is.vector(vec, mode ="character") ){
if( all(vec %in% surexr::ifs_countries$Name) ){
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
} else{
wrong_name <- vec[which(!vec %in% surexr::ifs_countries$Name)]
print(paste0("Error: "wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: vec is not a vector of strings")
}
}
iso_converter <- function(names){
vec <- names
if( is.vector(vec, mode ="character") ){
if( all(vec %in% surexr::ifs_countries$Name) ){
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
} else{
wrong_name <- vec[which(!vec %in% surexr::ifs_countries$Name)]
print(paste0("Error: "wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: vec is not a vector of strings")
}
}
print(paste0("Error: "wrong_name," is not a valid name. Have you checked ifs_countries?"))
iso_converter <- function(names){
vec <- names
if( is.vector(vec, mode ="character") ){
if( all(vec %in% surexr::ifs_countries$Name) ){
vec <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
} else{
wrong_name <- vec[which(!vec %in% surexr::ifs_countries$Name)]
print(paste0("Error: ",wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: vec is not a vector of strings")
}
}
paises <- c("Brazil","United States","Ulla")
iso_converter(names = paises)
paises <- c(1,2,3)
iso_converter(names = paises)
paises <- c(1,2,3,"Ulla")
iso_converter(names = paises)
paises <-
iso_converter(names = c("Brazil","United States"))
paises <-
iso_converter(names = c("Brazil","United States"))
c("Brazil","United States")
paises <-
iso_converter(names = c("Brazil","United States"))
paises <- c("Brazil","United States")
iso_converter(names = paises)
iso_converter <- function(names){
if( is.vector(vec, mode ="character") ){
if( all(names%in% surexr::ifs_countries$Name) ){
names<- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(vec)
} else{
wrong_name <- vec[which(!names%in% surexr::ifs_countries$Name)]
print(paste0("Error: ",wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: namesis not a vector of strings")
}
}
paises <- c("Brazil","United States")
iso_converter(names = paises)
paises <- c("Brazil","United States")
iso_converter(names = paises)
iso_converter <- function(names){
if( is.vector(vec, mode ="character") ){
if( all(names%in% surexr::ifs_countries$Name) ){
names<- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(names)
} else{
wrong_name <- vec[which(!names%in% surexr::ifs_countries$Name)]
print(paste0("Error: ",wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: namesis not a vector of strings")
}
}
paises <- c("Brazil","United States")
iso_converter(names = paises)
iso_converter(names = "Brazil")
iso_converter(names = "Brazil")
iso_converter(names = c("Brazil","Canada"))
iso_converter(names = c("Brazil","Canada"))
rm(names)
iso_converter(names = c("Brazil","Canada"))
rm(list=ls())
iso_converter <- function(names){
if( is.vector(vec, mode ="character") ){
if( all(names%in% surexr::ifs_countries$Name) ){
names<- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% vec]
return(names)
} else{
wrong_name <- vec[which(!names%in% surexr::ifs_countries$Name)]
print(paste0("Error: ",wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: namesis not a vector of strings")
}
}
iso_converter(names = c("Brazil","Canada"))
iso_converter <- function(names){
if( is.vector(names, mode ="character") ){
if( all(names %in% surexr::ifs_countries$Name) ){
names <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% names]
return(names)
} else{
wrong_name <- names[which(!names%in% surexr::ifs_countries$Name)]
print(paste0("Error: ",wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: namesis not a vector of strings")
}
}
iso_converter(names = c("Brazil","Canada"))
iso_converter(names = c("Brazil","Canada","Ulla"))
iso_converter(names = c("Brazil","Canada", 1))
iso_converter <- function(names){
if( is.vector(names, mode ="character") ){
if( all(names %in% surexr::ifs_countries$Name) ){
names <- surexr::ifs_countries$Code[surexr::ifs_countries$Name %in% names]
return(names)
} else{
wrong_name <- names[which(!names%in% surexr::ifs_countries$Name)]
print(paste0("Error: ",wrong_name," is not a valid name. Have you checked ifs_countries?"))
}
} else {
print("Error: names is not a vector of strings")
}
}
iso_converter("Brazil","Canada")
iso_converter(c("Brazil","Canada"))
devtools::document()
rm(list=ls())
devtools::document()
paises <- c("Australia",
"Brazil",
"Canada",
"Colombia",
"Germany",
"Hungary",
"Indonesia",
"Israel",
"Japan",
"Korea",
"Mexico",
"New Zealand",
"Norway",
"Peru",
"Singapore",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
devtools::install_gi[]
devtools::install_git("prvsct/surexr")
devtools::install_git("prvsct//surexr")
devtools::install_github("prvsct/surexr")
devtools::install_github("prvsct/surexr")
help("iso_converter")
paises_iso <- surexr::iso_converter(names = paises)
paises <- c("Australia",
"Brazil",
"Canada",
"Colombia",
"Germany",
"Hungary",
"Indonesia",
"Israel",
"Japan",
"Korea",
"Mexico",
"New Zealand",
"Norway",
"Peru",
"Singapore",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
paises_iso <- surexr::iso_converter(names = paises)
paises <- c("Australia",
"Brazil",
"Canada",
"Colombia",
"Germany",
"Hungary",
"Indonesia",
"Israel",
"Japan",
"Korea, Republic of",
"Mexico",
"New Zealand",
"Norway",
"Peru",
"Singapore",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
paises_iso <- surexr::iso_converter(names = paises)
paises_iso
# Copia e cola os nomes da tabela 1 em um vetor paises
# Substitui Korea por Korea, Republic of conforme necessÃ¡rio
paises <- c("Australia",
"Brazil",
"Canada",
"Chile",
"Colombia",
"Germany",
"Hungary",
"Indonesia",
"Israel",
"Japan",
"Korea, Republic of",
"Mexico",
"New Zealand",
"Norway",
"Peru",
"Singapore",
"South Africa",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
# Converte paises em paises_iso usando surexr::iso_converter
paises_iso <- surexr::iso_converter(names = paises)
paises_iso #checando
surexr::ifs_indicators
View(surexr::ifs_indicators)
# Usa surexr::ifs_data para baixar a taxa nominal de cÃ¢mbio em USD, fim do perÃ­odo, para os cÃ³digos
# ISO em paises_iso, comeÃ§ando em 1999 e atÃ© 2020 com frequÃªncia mensal
# ENDE_XDC_USD_RATE conforme surexr::ifs_indicators
exrate <- surexr::ifs_data(indicator = "ENDE_XDC_USD_RATE",
country = paises_iso,
start = 1999,
end = 2020,
freq = "M")
View(exrate)
5737/23
dim(exrate)
# Salva a base de dados, 70kb com 5737 obs, em exrate.Rdata
save(exrate, file = "R//exrate.Rdata")
# Salva a base de dados, 70kb com 5737 obs, em exrate.Rdata
save(exrate, file = "data//exrate.Rdata")
# Copia e cola os nomes da tabela 1 em um vetor paises
# Substitui Korea por "Korea, Republic of" conforme necessÃ¡rio
paises <- c("Australia",
"Brazil",
"Canada",
"Chile",
"Colombia",
"Germany",
"Hungary",
"Indonesia",
"Israel",
"Japan",
"Korea, Republic of",
"Mexico",
"New Zealand",
"Norway",
"Peru",
"Singapore",
"South Africa",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
# Converte paises em paises_iso usando surexr::iso_converter
paises_iso <- surexr::iso_converter(names = paises)
paises_iso #checando
save(paises_iso, file = "data/paises_iso.Rdata")
rm(lis=ls())
rm(list=ls())
paises_iso <- load(file = "paises_iso.Rdata")
paises_iso <- load(file = "data/paises_iso.Rdata")
# Usa surexr::ifs_data para baixar a taxa nominal de cÃ¢mbio em USD, fim do perÃ­odo, para os cÃ³digos
# ISO em paises_iso, comeÃ§ando em 1999 e atÃ© 2020 com frequÃªncia mensal
# ENDE_XDC_USD_RATE conforme surexr::ifs_indicators
exrate <- surexr::ifs_data(indicator = "ENDE_XDC_USD_RATE",
country = paises_iso,
start = 1999,
end = 2020,
freq = "M")
# Usa surexr::ifs_data para baixar a taxa nominal de cÃ¢mbio em USD, fim do perÃ­odo, para os cÃ³digos
# ISO em paises_iso, comeÃ§ando em 1999 e atÃ© 2020 com frequÃªncia mensal
# ENDE_XDC_USD_RATE conforme surexr::ifs_indicators
exrate <- surexr::ifs_data(indicator = "ENDE_XDC_USD_RATE",
country = paises_iso,
start = 1999,
end = 2020,
freq = "M")
paises_iso
# Copia e cola os nomes da tabela 1 em um vetor paises
# Substitui Korea por "Korea, Republic of" conforme necessÃ¡rio
paises <- c("Australia",
"Brazil",
"Canada",
"Chile",
"Colombia",
"Germany",
"Hungary",
"Indonesia",
"Israel",
"Japan",
"Korea, Republic of",
"Mexico",
"New Zealand",
"Norway",
"Peru",
"Singapore",
"South Africa",
"Sweden",
"Switzerland",
"Thailand",
"Turkey",
"United Kingdom",
"United States")
# Converte paises em paises_iso usando surexr::iso_converter
paises_iso <- surexr::iso_converter(names = paises)
paises_iso #checando
# Salva .Rdata
save(paises_iso, file = "data/paises_iso.Rdata")
paises_iso
rm(list=ls())
paises_iso <- load(file = "data/paises_iso.Rdata")
paises_iso
paises_iso <- load(file = "data//paises_iso.Rdata")
paises_iso
load(file = "data//paises_iso.Rdata")
paises_iso <- load(file = "data//paises_iso.Rdata")
load(file = "data//paises_iso.Rdata")
# Usa surexr::ifs_data para baixar a taxa nominal de cÃ¢mbio em USD, fim do perÃ­odo, para os cÃ³digos
# ISO em paises_iso, comeÃ§ando em 1999 e atÃ© 2020 com frequÃªncia mensal
# ENDE_XDC_USD_RATE conforme surexr::ifs_indicators
exrate <- surexr::ifs_data(indicator = "ENDE_XDC_USD_RATE",
country = paises_iso,
start = 1999,
end = 2020,
freq = "M")
# Salva a base de dados, 70kb com 5737 obs, em exrate.Rdata
save(exrate, file = "data//exrate.Rdata")
# Carrega a imagem de paÃ­ses conforme gerada por paises_iso.R
# ATENÃÃO: se houver mudanÃ§as nos paÃ­ses, verificar se nova versÃ£o de paÃ­ses_iso.Rdata foi salva
load(file = "data//paises_iso.Rdata")
# Usa surexr::ifs_data para baixar a taxa nominal de cÃ¢mbio em USD, fim do perÃ­odo, para os cÃ³digos
# ISO em paises_iso, comeÃ§ando em 1999 e atÃ© 2020 com frequÃªncia mensal
# ENDE_XDC_USD_RATE conforme surexr::ifs_indicators
exrate <- surexr::ifs_data(indicator = "ENDE_XDC_USD_RATE",
country = paises_iso,
start = 1999,
end = 2020,
freq = "M")
unique(exrate$iso2c)
count(unique(exrate$iso2c))
plyr::count(unique(exrate$iso2c))
plyrr::count(unique(exrate$iso2c))
dplyr::count(unique(exrate$iso2c))
unique(exrate$iso2c)
dim(unique(exrate$iso2c))
length(unique(exrate$iso2c))
unique(exrate$iso2c) %in% paises_iso
unique(exrate$iso2c)
!unique(exrate$iso2c) %in% paises_iso
unique(exrate$iso2c)
length(unique(exrate$iso2c))
unique(paises_iso)
!paises_iso %in% unique(exrate$iso2c)
which(!paises_iso %in% unique(exrate$iso2c))
paises_iso[which(!paises_iso %in% unique(exrate$iso2c))]
paises_iso
View(exrate)
# Carrega a imagem de paÃ­ses conforme gerada por paises_iso.R
# ATENÃÃO: se houver mudanÃ§as nos paÃ­ses, verificar se nova versÃ£o de paÃ­ses_iso.Rdata foi salva
load(file = "data//paises_iso.Rdata")
# Usa surexr::ifs_data para baixar a taxa nominal de cÃ¢mbio em USD, fim do perÃ­odo, para os cÃ³digos
# ISO em paises_iso, comeÃ§ando em 1999 e atÃ© 2020 com frequÃªncia mensal
# ENDE_XDC_USD_RATE conforme surexr::ifs_indicators
exrate <- surexr::ifs_data(indicator = "ENDE_XDC_USD_RATE",
country = paises_iso,
start = 1999,
end = 2020,
freq = "M")
View(exrate)
exrate_wide <- tidyr::pivot_wider(data = exrate)
View(exrate)
colnames(exrate)
exrate_wide <- tidyr::pivot_wider(data = exrate, names_from = "iso2c", values_from = "ENDE_XDC_USD_RATE")
View(exrate_wide)
View(exrate_wide)
