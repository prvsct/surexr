gdp_growth_table$Amostra[gdp_growth_table$País==i] <-
paste(gdp_growth$year_month[gdp_growth$iso2c==i][1],
gdp_growth$year_month[gdp_growth$iso2c==i][length(gdp_growth$year_month[gdp_growth$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
gdp_growth_table$Observações[gdp_growth_table$País==i] <-
length(gdp_growth$year_month[gdp_growth$iso2c==i])
}
gdp_growth_table$Amostra[gdp_growth_table$País==i]
gdp_growth$year_month[gdp_growth$iso2c==i][1]
gdp_growth$iso2c==i
gdp_growth$year_month[gdp_growth$iso2c==i][1]
for(i in paises_iso){
# Preenchimento da coluna de Amostra
gdp_growth_table$Amostra[gdp_growth_table$País==i] <-
paste(gdp_growth$year_quarter[gdp_growth$iso2c==i][1],
gdp_growth$year_quarter[gdp_growth$iso2c==i][length(gdp_growth$year_quarter[gdp_growth$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
gdp_growth_table$Observações[gdp_growth_table$País==i] <-
length(gdp_growth$year_quarter[gdp_growth$iso2c==i])
}
gdp_growth_table$País <- nomes$Name
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
gdp_growth_table$País <- nomes$Name
gdp_growth_table_export <- gdp_growth_table
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
gdp_growth_table$País <- nomes$Name
rm(list=ls())
# Lista de paises
load("data//paises_iso.Rdata")
# Crescimento do PIB
load("data//gdp_growth.Rdata")
# Código do IFS da série
gdp_ifs_code <- colnames(gdp_growth)[3]
# Criação do dataframe
gdp_growth_table <- data.frame("País"=character(length(paises_iso)),
"Série"=character(length(paises_iso)),
"Descrição"=character(length(paises_iso)),
"Amostra"=character(length(paises_iso)),
"Observações"=character(length(paises_iso)))
# Código de países na coluna País
gdp_growth_table$País <- paises_iso
# Código da série na coluna Série
gdp_growth_table$Série <- gdp_ifs_code
# Descrição da série na coluna Descrição
gdp_growth_table$Descrição <- "IFS GDP Index (2010=100)"
for(i in paises_iso){
# Preenchimento da coluna de Amostra
gdp_growth_table$Amostra[gdp_growth_table$País==i] <-
paste(gdp_growth$year_quarter[gdp_growth$iso2c==i][1],
gdp_growth$year_quarter[gdp_growth$iso2c==i][length(gdp_growth$year_quarter[gdp_growth$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
gdp_growth_table$Observações[gdp_growth_table$País==i] <-
length(gdp_growth$year_quarter[gdp_growth$iso2c==i])
}
gdp_growth_table_export <- gdp_growth_table
View(gdp_growth_table)
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
gdp_growth_table$País <- nomes$Name
View(gdp_growth_table_export)
gdp_growth_table_export$País <- nomes$Name
View(gdp_growth_table_export)
# Exportação
print(xtable::xtable(x = gdp_growth_table_export),
floating = F,
latex.environments = NULL,
booktabs = T,
include.rownames = F,
file = "C:\\Pedro Roveri Scatimburgo\\Outputs\\gdp_tabela.tex")
rm(list=ls())
library(tidyverse)
# Lista de paises
load("data//paises_iso.Rdata")
# Crescimento do PIB
load("data//gdp_growth.Rdata")
# Código do IFS da série
gdp_ifs_code <- colnames(gdp_growth)[3]
# Criação do dataframe
gdp_growth_table <- data.frame("País"=character(length(paises_iso)),
"Série"=character(length(paises_iso)),
"Descrição"=character(length(paises_iso)),
"Amostra"=character(length(paises_iso)),
"Observações"=character(length(paises_iso)))
# Código de países na coluna País
gdp_growth_table$País <- paises_iso
# Código da série na coluna Série
gdp_growth_table$Série <- gdp_ifs_code
# Descrição da série na coluna Descrição
gdp_growth_table$Descrição <- "IFS GDP Index (2010=100)"
for(i in paises_iso){
# Preenchimento da coluna de Amostra
gdp_growth_table$Amostra[gdp_growth_table$País==i] <-
paste(gdp_growth$year_quarter[gdp_growth$iso2c==i][1],
gdp_growth$year_quarter[gdp_growth$iso2c==i][length(gdp_growth$year_quarter[gdp_growth$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
gdp_growth_table$Observações[gdp_growth_table$País==i] <-
length(gdp_growth$year_quarter[gdp_growth$iso2c==i])
}
gdp_growth_table_export <- gdp_growth_table
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
gdp_growth_table_export$País <- nomes$Name
View(gdp_growth_table_export)
gdp_growth_table_export <- gdp_growth_table
gdp_ifs_code
gdp_growth_table$Série[gdp_growth_table$País=="PE" | gdp_growth_table$País=="TR"]
# Troca o código e descrição de PE e TE
gdp_growth_table$Série[gdp_growth_table$País=="PE" | gdp_growth_table$País=="TR"] <- "NGDP_R_K_IX"
rm(list=ls())
# Lista de paises
load("data//paises_iso.Rdata")
# Crescimento do PIB
load("data//gdp_growth.Rdata")
# Código do IFS da série
gdp_ifs_code <- colnames(gdp_growth)[3]
# Criação do dataframe
gdp_growth_table <- data.frame("País"=character(length(paises_iso)),
"Série"=character(length(paises_iso)),
"Descrição"=character(length(paises_iso)),
"Amostra"=character(length(paises_iso)),
"Observações"=character(length(paises_iso)))
# Código de países na coluna País
gdp_growth_table$País <- paises_iso
# Código da série na coluna Série
gdp_growth_table$Série <- gdp_ifs_code
# Descrição da série na coluna Descrição
gdp_growth_table$Descrição <- "Seasonally Adjusted IFS GDP Index (2010=100)"
for(i in paises_iso){
# Preenchimento da coluna de Amostra
gdp_growth_table$Amostra[gdp_growth_table$País==i] <-
paste(gdp_growth$year_quarter[gdp_growth$iso2c==i][1],
gdp_growth$year_quarter[gdp_growth$iso2c==i][length(gdp_growth$year_quarter[gdp_growth$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
gdp_growth_table$Observações[gdp_growth_table$País==i] <-
length(gdp_growth$year_quarter[gdp_growth$iso2c==i])
}
# Troca o código e descrição de PE e TE
gdp_growth_table$Série[gdp_growth_table$País=="PE" | gdp_growth_table$País=="TR"] <- "NGDP_R_K_IX"
gdp_growth_table$Descrição[gdp_growth_table$País=="PE" | gdp_growth_table$País=="TR"] <- "IFS GDP Index (2010=100)"
gdp_growth_table_export <- gdp_growth_table
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
gdp_growth_table_export$País <- nomes$Name
View(gdp_growth_table_export)
# Exportação
print(xtable::xtable(x = gdp_growth_table_export),
floating = F,
latex.environments = NULL,
booktabs = T,
include.rownames = F,
file = "C:\\Pedro Roveri Scatimburgo\\Outputs\\gdp_tabela.tex")
rm(list=ls())
library(tidyverse)
# Carrega a imagem de países conforme gerada por definir_base.R
# ATENÇÃO: se houver mudanças nos países, verificar se nova versão de países_iso.Rdata foi salva
load(file = "data//paises_iso.Rdata")
# Carrega a imagem do período amostral conforme gerada por definir_base.R
# ATENÇÃO: se houver mudanças no período amostral, verificar se nova versão de timespan.Rdata foi salva
load(file = "data//timespan.Rdata")
cod_exrate <- "ENDE_XDC_USD_RATE"
rm(list=ls())
# Carrega a imagem de países conforme gerada por definir_base.R
# ATENÇÃO: se houver mudanças nos países, verificar se nova versão de países_iso.Rdata foi salva
load(file = "data//paises_iso.Rdata")
# Carrega a imagem do período amostral conforme gerada por definir_base.R
# ATENÇÃO: se houver mudanças no período amostral, verificar se nova versão de timespan.Rdata foi salva
load(file = "data//timespan.Rdata")
# Nesta seção define-se os códigos que serão utilizadoss para cada uma das
# séries.
cod_treasury_bills <- "FITB_PA"
cod_deposit_rate <- "FIDR_PA"
cod_gov_bonds <- "FIGB_PA"
treasury_bills <- surexr::ifs_data(indicator = cod_treasury_bills,
country = paises_iso,
start = timespan["início"],
end = timespan["final"],
freq = "M")
treasury_bills_wide <- pivot_wider(treasury_bills, names_from = "iso2c", values_from = "FITB_PA")
View(treasury_bills_wide)
# Lista de países
load(file = "data//paises_iso.Rdata")
# Lista completa de paises
load(file = "data//paises_iso.Rdata")
# Treasury bills
load(file = "data//treasury_bills.Rdata")
# Deposit rate
load(file = "data//deposit_rate.Rdata")
# Gov Bonds
load(file = "data//gov_bonds.Rdata")
rm(list=ls())
# Lista de países
load(file = "data//paises_iso.Rdata")
# Lista completa de paises
load(file = "data//paises_iso.Rdata")
# Treasury bills
load(file = "data//treasury_bills.Rdata")
# Deposit rate
load(file = "data//deposit_rate.Rdata")
# Gov Bonds
load(file = "data//gov_bonds.Rdata")
View(treasury_bills)
# Códigos do IFS de cada série
intrate_ifs_codes <- c(colnames(treasury_bills)[3],
colnames(deposit_rate)[3],
colnames(gov_bonds)[3])
# Criação do dataframe
intrate_tabela <- data.frame("País"=character(3*length(paises_iso)),
"Série"=character(3*length(paises_iso)),
"Amostra"=character(3*length(paises_iso)),
"Observações"=character(3*length(paises_iso)))
# Códigos dos países na coluna de país
intrate_tabela$País <- rep(paises_iso,3)[order(rep(paises_iso,3))]
# Códigos das séries nas colunas de série
intrate_tabela$Série <- rep(intrate_ifs_codes,23)
for(i in paises_iso){
# Preenchimento da coluna de Amostra
intrate_tabela$Amostra[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[1]] <-
paste(treasury_bills$year_month[treasury_bills$iso2c==i][1],
treasury_bills$year_month[treasury_bills$iso2c==i][length(treasury_bills$year_month[treasury_bills$iso2c==i])],
sep = " a ")
# Preenchimento do número de observações
intrate_tabela$Observações[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[1]] <-
length(treasury_bills$year_month[treasury_bills$iso2c==i])
}
View(treasury_bills)
View(intrate_tabela)
for(i in paises_iso){
# Preenchimento da coluna de Amostra
intrate_tabela$Amostra[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[2]] <-
paste(deposit_rate$year_month[deposit_rate$iso2c==i][1],
deposit_rate$year_month[deposit_rate$iso2c==i][length(deposit_rate$year_month[deposit_rate$iso2c==i])],
sep = " a ")
# Preenchimento do número de observações
intrate_tabela$Observações[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[2]] <-
length(deposit_rate$year_month[deposit_rate$iso2c==i])
}
for(i in paises_iso){
# Preenchimento da coluna de Amostra
intrate_tabela$Amostra[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[3]] <-
paste(gov_bonds$year_month[gov_bonds$iso2c==i][1],
gov_bonds$year_month[gov_bonds$iso2c==i][length(gov_bonds$year_month[gov_bonds$iso2c==i])],
sep = " a ")
# Preenchimento do número de observações
intrate_tabela$Observações[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[3]] <-
length(gov_bonds$year_month[gov_bonds$iso2c==i])
}
intrate_tabela_export <- intrate_tabela
# Substitui "NA a" por "Ausente"
intrate_tabela_export$Amostra <- str_replace(string = intrate_tabela_export$Amostra,
pattern = "NA a ",
replacement = "Ausente")
# Corrige GB
# Em deposit_rate, havia uma linha para GB com apenas valores ausentes, de forma que consta para
# GB deposit_rate uma amostra NA com 1 observação
intrate_tabela_export$Amostra[23] <- "Ausente"
intrate_tabela_export$Observações[23] <- 0
View(intrate_tabela_export)
# Substitui código iso2c do país pelo nome do país
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
intrate_tabela_export$País <- rep(nomes$Name,3)[order(rep(nomes$Name,3))]
# Adiciona coluna de descrição da série
intrate_tabela_export$Descrição <- NA
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[1]] <- "Treasury Bills"
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[2]] <- "Deposit Rates"
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[3]] <- "Government Bonds"
# Reordena as colunas
intrate_tabela_export <- intrate_tabela_export[,c(1,2,5,3,4)]
View(intrate_tabela_export)
intrate_tabela_export <- intrate_tabela
View(intrate_tabela_export)
# Substitui "NA a" por "Ausente"
intrate_tabela_export$Amostra <- str_replace(string = intrate_tabela_export$Amostra,
pattern = "NA a ",
replacement = "Ausente")
# Corrige GB
# Em deposit_rate, havia uma linha para GB com apenas valores ausentes, de forma que consta para
# GB deposit_rate uma amostra NA com 1 observação
intrate_tabela_export$Amostra[23] <- "Ausente"
intrate_tabela_export$Observações[23] <- 0
# Substitui código iso2c do país pelo nome do país
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
intrate_tabela_export$País <- rep(nomes$Name,3)[order(rep(nomes$Name,3))]
intrate_tabela_export <- intrate_tabela
# Substitui "NA a" por "Ausente"
intrate_tabela_export$Amostra <- str_replace(string = intrate_tabela_export$Amostra,
pattern = "NA a ",
replacement = "Ausente")
# Corrige GB
# Em deposit_rate, havia uma linha para GB com apenas valores ausentes, de forma que consta para
# GB deposit_rate uma amostra NA com 1 observação
intrate_tabela_export$Amostra[23] <- "Ausente"
intrate_tabela_export$Observações[23] <- 0
surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
# Substitui código iso2c do país pelo nome do país
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
intrate_tabela_export$País <- rep(nomes$Name,3)[order(rep(nomes$Name,3))]
rep(nomes$Name,3)[order(rep(nomes$Name,3))]
nomes
rep(nomes$Name,3)[order(rep(nomes$Name,3))]
intrate_tabela_export <- intrate_tabela
# Substitui "NA a" por "Ausente"
intrate_tabela_export$Amostra <- str_replace(string = intrate_tabela_export$Amostra,
pattern = "NA a ",
replacement = "Ausente")
# Corrige GB
# Em deposit_rate, havia uma linha para GB com apenas valores ausentes, de forma que consta para
# GB deposit_rate uma amostra NA com 1 observação
intrate_tabela_export$Amostra[23] <- "Ausente"
intrate_tabela_export$Observações[23] <- 0
# Substitui código iso2c do país pelo nome do país
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
# Substitui código iso2c do país pelo nome do país
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
rep(nomes$Name,3)[order(rep(nomes$Name,3))]
nomes
rep(paises_iso,3)[order(rep(paises_iso,3))]
nomes
rep(nomes$Name,3)
rep(nomes$Name,each=3)
intrate_tabela_export$País <- rep(nomes$Name,each=3)
View(intrate_tabela_export)
rm(list=ls())
# Lista de países
load(file = "data//paises_iso.Rdata")
# Lista completa de paises
load(file = "data//paises_iso.Rdata")
# Treasury bills
load(file = "data//treasury_bills.Rdata")
# Deposit rate
load(file = "data//deposit_rate.Rdata")
# Gov Bonds
load(file = "data//gov_bonds.Rdata")
# Códigos do IFS de cada série
intrate_ifs_codes <- c(colnames(treasury_bills)[3],
colnames(deposit_rate)[3],
colnames(gov_bonds)[3])
# Criação do dataframe
intrate_tabela <- data.frame("País"=character(3*length(paises_iso)),
"Série"=character(3*length(paises_iso)),
"Amostra"=character(3*length(paises_iso)),
"Observações"=character(3*length(paises_iso)))
# Códigos dos países na coluna de país
intrate_tabela$País <- rep(paises_iso,3)[order(rep(paises_iso,3))]
# Códigos das séries nas colunas de série
intrate_tabela$Série <- rep(intrate_ifs_codes,23)
for(i in paises_iso){
# Preenchimento da coluna de Amostra
intrate_tabela$Amostra[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[1]] <-
paste(treasury_bills$year_month[treasury_bills$iso2c==i][1],
treasury_bills$year_month[treasury_bills$iso2c==i][length(treasury_bills$year_month[treasury_bills$iso2c==i])],
sep = " a ")
# Preenchimento do número de observações
intrate_tabela$Observações[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[1]] <-
length(treasury_bills$year_month[treasury_bills$iso2c==i])
}
for(i in paises_iso){
# Preenchimento da coluna de Amostra
intrate_tabela$Amostra[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[2]] <-
paste(deposit_rate$year_month[deposit_rate$iso2c==i][1],
deposit_rate$year_month[deposit_rate$iso2c==i][length(deposit_rate$year_month[deposit_rate$iso2c==i])],
sep = " a ")
# Preenchimento do número de observações
intrate_tabela$Observações[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[2]] <-
length(deposit_rate$year_month[deposit_rate$iso2c==i])
}
for(i in paises_iso){
# Preenchimento da coluna de Amostra
intrate_tabela$Amostra[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[3]] <-
paste(gov_bonds$year_month[gov_bonds$iso2c==i][1],
gov_bonds$year_month[gov_bonds$iso2c==i][length(gov_bonds$year_month[gov_bonds$iso2c==i])],
sep = " a ")
# Preenchimento do número de observações
intrate_tabela$Observações[intrate_tabela$País==i & intrate_tabela$Série==intrate_ifs_codes[3]] <-
length(gov_bonds$year_month[gov_bonds$iso2c==i])
}
intrate_tabela_export <- intrate_tabela
# Substitui "NA a" por "Ausente"
intrate_tabela_export$Amostra <- str_replace(string = intrate_tabela_export$Amostra,
pattern = "NA a ",
replacement = "Ausente")
# Corrige GB
# Em deposit_rate, havia uma linha para GB com apenas valores ausentes, de forma que consta para
# GB deposit_rate uma amostra NA com 1 observação
intrate_tabela_export$Amostra[23] <- "Ausente"
intrate_tabela_export$Observações[23] <- 0
# Substitui código iso2c do país pelo nome do país
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
intrate_tabela_export$País <- rep(nomes$Name,each=3)
# Adiciona coluna de descrição da série
intrate_tabela_export$Descrição <- NA
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[1]] <- "Treasury Bills"
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[2]] <- "Deposit Rates"
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[3]] <- "Government Bonds"
# Reordena as colunas
intrate_tabela_export <- intrate_tabela_export[,c(1,2,5,3,4)]
View(intrate_tabela_export)
# Adiciona coluna de descrição da série
intrate_tabela_export$Descrição <- NA
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[1]] <- "Treasury Bills Rates"
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[2]] <- "Deposit Rates"
intrate_tabela_export$Descrição[intrate_tabela_export$Série==intrate_ifs_codes[3]] <- "Government Bonds Rates"
# Reordena as colunas
intrate_tabela_export <- intrate_tabela_export[,c(1,2,5,3,4)]
View(intrate_tabela_export)
# Exportação
print(xtable::xtable(x = intrate_tabela_export),
floating = F,
latex.environments = NULL,
booktabs = T,
include.rownames = F,
file = "C:\\Pedro Roveri Scatimburgo\\Outputs\\intrate_tabela.tex")
writexl::write_xlsx(x = intrate_tabela_export, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\intrate_tabela.xlsx")
rm(list=ls())
# Lista de paises
load("data//paises_iso.Rdata")
# Crescimento do PIB
load("data//gdp_growth.Rdata")
# Código do IFS da série
gdp_ifs_code <- colnames(gdp_growth)[3]
# Criação do dataframe
gdp_growth_table <- data.frame("País"=character(length(paises_iso)),
"Série"=character(length(paises_iso)),
"Descrição"=character(length(paises_iso)),
"Amostra"=character(length(paises_iso)),
"Observações"=character(length(paises_iso)))
# Código de países na coluna País
gdp_growth_table$País <- paises_iso
# Código da série na coluna Série
gdp_growth_table$Série <- gdp_ifs_code
# Descrição da série na coluna Descrição
gdp_growth_table$Descrição <- "Seasonally Adjusted IFS GDP Index (2010=100)"
for(i in paises_iso){
# Preenchimento da coluna de Amostra
gdp_growth_table$Amostra[gdp_growth_table$País==i] <-
paste(gdp_growth$year_quarter[gdp_growth$iso2c==i][1],
gdp_growth$year_quarter[gdp_growth$iso2c==i][length(gdp_growth$year_quarter[gdp_growth$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
gdp_growth_table$Observações[gdp_growth_table$País==i] <-
length(gdp_growth$year_quarter[gdp_growth$iso2c==i])
}
# Troca o código e descrição de PE e TE
gdp_growth_table$Série[gdp_growth_table$País=="PE" | gdp_growth_table$País=="TR"] <- "NGDP_R_K_IX"
gdp_growth_table$Descrição[gdp_growth_table$País=="PE" | gdp_growth_table$País=="TR"] <- "IFS GDP Index (2010=100)"
gdp_growth_table_export <- gdp_growth_table
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
gdp_growth_table_export$País <- nomes$Name
View(gdp_growth_table_export)
writexl::write_xlsx(gdp_growth_table_export, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\gdp_tabela.xlsx")
rm(list=ls())
surexr::ifs_indicators
View(surexr::ifs_indicators)
cpi <- surexr::ifs_data(indicator = PCPI_IX)
cpi <- surexr::ifs_data(indicator = "PCPI_IX", country = "US", start = 1999, end = 2020, freq = "M")
View(cpi)
rm(list=ls())
devtools::install_github("prvsct/surexr")
devtools::install_github("prvsct/surexr", repo = )
devtools::install_github("prvsct/surexr", repo = "dev")
devtools::install_github("prvsct/surexr")
devtools::install_github("prvsct/surexr")
devtools::install_github("prvsct/surexr")
devtools::install_github("prvsct/surexr")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install_github("prvsct/surexr")
library(tidyverse)
load("data//exrate.Rdata")
load("data//paises_iso.Rdata")
# Pivotamento para checar integridade
exrate_wide <- pivot_wider(exrate, names_from = "iso2c", values_from = colnames(exrate)[3])
# Código do IFS da série
exrate_ifs_code <- colnames(exrate)[3]
# Criação do dataframe
exrate_table <- data.frame("País"=character(length(paises_iso)),
"Série"=character(length(paises_iso)),
"Descrição"=character(length(paises_iso)),
"Amostra"=character(length(paises_iso)),
"Observações"=character(length(paises_iso)))
# Código de países na coluna País
exrate_table$País <- paises_iso
# Código da série na coluna Série
exrate_table$Série <- exrate_ifs_code
# Descrição da série na coluna Descrição
exrate_table$Descrição <- "Exchange Rates"
for(i in paises_iso){
# Preenchimento da coluna de Amostra
exrate_table$Amostra[exrate_table$País==i] <-
paste(exrate$year_month[exrate$iso2c==i][1],
exrate$year_month[exrate$iso2c==i][length(exrate$year_month[exrate$iso2c==i])],
sep = " a ")
# Preenchimento da coluna de Observações
exrate_table$Observações[exrate_table$País==i] <-
length(exrate$year_month[exrate$iso2c==i])
}
exrate_table_export <- exrate_table
# Subtitui o código do país pelo nome
nomes <- surexr::ifs_countries[which(surexr::ifs_countries$Code %in% paises_iso),]
exrate_table_export$País <- nomes$Name
View(exrate_table_export)
View(exrate)
View(exrate_wide)
