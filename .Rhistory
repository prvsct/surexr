ts_peru <- gdp_nsa %>%
pivot_wider(values_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_month,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
colnames(gdp_nsa)[3]
View(gdp_nsa)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(values_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
View(gdp_nsa)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(values_from = "iso2c", values_from = "NGDP_R_K_IX") %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(values_from = "iso2c", names_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
pivot_wider(gdp_nsa, names_from = "iso2c", values_from = colnames(gdp_nsa)[3])
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(values_from = "iso2c", names_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter, PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(values_from = "iso2c", names_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
gdp_nsa %>%
pivot_wider(values_from = "iso2c", names_from = colnames(gdp_nsa)[3])
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
ts_turkey <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
ts(start = c(1999, 1), end = c(2020, 2), frequency = 4)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(x12)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(x12 = "")
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(x11 = "")
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas()
View(ts_peru)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(x11="")
ts_turkey <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
ts(start = c(1999, 1), end = c(2020, 2), frequency = 4) %>%
seasonal::seas(x11="")
Differencing has annihilated the series
plot(ts_peru)
plot(ts_peru)
View(ts_peru)
plot(ts_peru["PE"])
View(ts_peru)
plot(ts_peru["PE"])
plot(ts_peru)
plot(ts_turkey)
# Criação dos objetos ts
ts_peru <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(x11="")
View(gdp_nsa)
rm(list=ls())
# Lista de países
load("data//paises_iso.Rdata")
# GDP já ajustado
load("data//gdp_sa.Rdata")
# GDP ainda não ajustado
load("data//gdp_nsa.Rdata")
pe_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(x11="")
View(gdp_nsa)
length(gdp_nsa$iso2c=="PE")
tr_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
ts(start = c(1999, 1), end = c(2020, 2), frequency = 4)
length(ts_sa)
pe_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
length(pe_sa)
View(pe_sa)
length(pe_sa$PE)
dim(pe_sa)
length(gdp_nsa$iso2c=="PE")
dim(gdp_nsa$iso2c=="PE")
nrow(gdp_nsa$iso2c=="PE")
nrow(gdp_nsa[gdp_nsa$iso2c=="PE",])
dim(tr_sa)
nrow(gdp_nsa[gdp_nsa$iso2c=="TR",])
pe_Sa
pe_sa
pe_sa[3]
pe_sa[,3]
pe_sa[,2]
View(gdp_nsa)
pe_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) #%>%
tr_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
ts(start = c(1999, 1), end = c(2020, 2), frequency = 4) #%>%
# Teste para verificar qual ARIMA()
seasonal::checkX13()
install.packages("autoarima")
install.packages("forecast")
help(auto.arima)
pe_test <- forecast::auto.arima(y = pe_sa, seasonal = T)
View(pe_sa)
pe_test <- forecast::auto.arima(y = pe_sa[2], seasonal = T)
View(pe_test)
summary(pe_test)
pe_sa[2]
pe_sa[,2]
pe_test <- forecast::auto.arima(y = pe_sa[,2], seasonal = T)
summary(pe_test)
pe_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(arima.model = "(0,1,0)(1,1,0)")
pe_sa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(arima.model = "(0,1,0)(1,1,0)", x11 = "")
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_sa[,2], seasonal = T)
rm(list=ls())
# Lista de países
load("data//paises_iso.Rdata")
# GDP já ajustado
load("data//gdp_sa.Rdata")
# GDP ainda não ajustado
load("data//gdp_nsa.Rdata")
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE)
# TR
tr_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR)
View(pe_nsa)
View(tr_nsa)
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
# TR
tr_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_nsa$PE, seasonal = T)
# Teste auto,arima para TR
tr_test <- forecast::auto.arima(y = tr_nsa$TR, seasonal = T)
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_nsa$PE, seasonal = T)
pe_test_sum <- summary(pe_test)
# Teste auto,arima para TR
tr_test <- forecast::auto.arima(y = tr_nsa$TR, seasonal = T)
tr_test_sum <- summary(tr_test)
pe_test_sum
summary(pe_test)
View(pe_test)
summary(pe_test)
summary(tr_test)
pe_nsa$PE
tr_nsa$TR
View(pe_test)
pe_test[["arma"]]
pe_test[["call"]]
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_nsa$PE, seasonal = T)
# Teste auto,arima para TR
tr_test <- forecast::auto.arima(y = tr_nsa$TR, seasonal = T)
pe_test
pe_test$coef
pe_test$arma
pe_nsa
View(pe_nsa)
pe_nsa$PE %>%
ts(start = (1999, 1), end = (2017, 1), frequency = 4)
pe_nsa$PE %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4)
pe_test
pe_sa <- pe_nsa$PE %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(arima.model = "(1,1,0)")
pe_sa
library(tidyverse)
seasonal::checkX13()
# Lista de países
load("data//paises_iso.Rdata")
# GDP já ajustado
load("data//gdp_sa.Rdata")
# GDP ainda não ajustado
load("data//gdp_nsa.Rdata")
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
# TR
tr_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_nsa$PE, seasonal = T)
# Teste auto,arima para TR
tr_test <- forecast::auto.arima(y = tr_nsa$TR, seasonal = T)
pe_test
tr_test
pe_sa <- pe_nsa$PE %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(arima.model = "(1,1,0)")
install.packages("seasonal")
seasonal::checkX13()
# Lista de países
load("data//paises_iso.Rdata")
# GDP já ajustado
load("data//gdp_sa.Rdata")
# GDP ainda não ajustado
load("data//gdp_nsa.Rdata")
# --- ISOLANDO AS SÉRIES NÃO AJUSTADAS EM OBJETOS SEPARADOS ---
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
# TR
tr_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
# --- TESTE DE SAZONALIDADE ----
#
# Antes de realizar a sazonalidade usando seasonal::seas(), é preciso descobrir qual é o melhor modelo ARIMA.
# Para isso usa-se forecast::auto.arima() que determina qual o melhor modelo ARIMA com base nos critérios de informação.
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_nsa$PE, seasonal = T)
# Teste auto,arima para TR
tr_test <- forecast::auto.arima(y = tr_nsa$TR, seasonal = T)
rm(list=ls())
library(tidyverse)
# --- INTRODUÇÃO ----
#
# Esse código realiza o ajuste sazonal das séries não sazonalmente ajustadas e então faz o append dos dois
# dataframes. Em seguida, calcula a taxa de crescimento do PIB.
#
# ATENÇÃO: verficiar se as bases foram corretamente carregadas
# ---- CARREGAMENTO DAS BASES E DOS PAISES ----
# Lista de países
load("data//paises_iso.Rdata")
# GDP já ajustado
load("data//gdp_sa.Rdata")
# GDP ainda não ajustado
load("data//gdp_nsa.Rdata")
# --- ISOLANDO AS SÉRIES NÃO AJUSTADAS EM OBJETOS SEPARADOS ---
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
# TR
tr_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
# Teste auto.arima para PE
pe_test <- forecast::auto.arima(y = pe_nsa$PE, seasonal = T)
# Teste auto,arima para TR
tr_test <- forecast::auto.arima(y = tr_nsa$TR, seasonal = T)
pe_sa <- pe_nsa$PE %>%
ts(start = c(1999, 1), end = c(2017, 1), frequency = 4) %>%
seasonal::seas(arima.model = "(1,1,0)")
tr_nsa
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\")
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\")
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\")
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\pe_nsa.xlsx")
writexl::write_xlsx(x = tr_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\tr_nsa.xlsx")
install.packages("seasonalview")
seasonalview::view(pe_nsa)
seasonalview::view()
seasonalview::standalone()
rm(list=ls())
gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit %>%
mutate(year_quarter = str_replace(pattern = "Q", replacement = "")
)
# Lista de países
load("data//paises_iso.Rdata")
# GDP já ajustado
load("data//gdp_sa.Rdata")
# GDP ainda não ajustado
load("data//gdp_nsa.Rdata")
gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit %>%
mutate(year_quarter = str_replace(pattern = "Q", replacement = "")
)
transmutate
gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit %>%
transmute(year_quarter = str_replace(pattern = "Q", replacement = ""))
gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit %>%
transmute(year_quarter = gsub(pattern = "Q", replacement = ""))
gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit %>%
transmute(year_quarter = gsub(x = tr_nsa$year_quarter, pattern = "Q", replacement = ""))
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
# TR
tr_nsa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
pe_nsa$year_quarter <- str_replace(string = pe_nsa$year_quarter, pattern = "Q", replacement = "")
View(pe_nsa)
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
pe_nsa$year_quarter <- str_replace(string = pe_nsa$year_quarter, pattern = "-", replacement = "")
View(pe_nsa)
# TR
tr_nsa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
tr_nsa$year_quarter <- str_replace(string = tr_nsa$year_quarter, pattern = "-", replacement = "")
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\pe_nsa.xlsx")
writexl::write_xlsx(x = tr_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\tr_nsa.xlsx")
# TR
tr_nsa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
tr_nsa$year_quarter <- str_replace(string = tr_nsa$year_quarter, pattern = "-", replacement = "")
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\pe_nsa.xlsx")
writexl::write_xlsx(x = tr_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\tr_nsa.xlsx")
View(tr_nsa)
writexl::write_xlsx(x = tr_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\tr_nsa.xlsx")
# TR
tr_nsa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
tr_nsa$year_quarter <- str_replace(string = tr_nsa$year_quarter, pattern = "-", replacement = "")
View(tr_nsa)
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\pe_nsa.xlsx")
writexl::write_xlsx(x = tr_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\tr_nsa.xlsx")
# PE
pe_nsa <-gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,PE) %>%
na.omit
# TR
tr_nsa <- gdp_nsa %>%
pivot_wider(names_from = "iso2c", values_from = colnames(gdp_nsa)[3]) %>%
select(year_quarter,TR) %>%
na.omit
# Gerando arquivos .xlsx a partir delas
writexl::write_xlsx(x = pe_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\pe_nsa.xlsx")
writexl::write_xlsx(x = tr_nsa, path = "C:\\Pedro Roveri Scatimburgo\\Outputs\\tr_nsa.xlsx")
pe_sa <- readxl::read_excel(path = "C:\\Pedro Roveri Scatimburgo\\Dados\\seasonal_website\\pe_sa.xlsx")
tr_sa <- readxl::read_excel(path = "C:\\Pedro Roveri Scatimburgo\\Dados\\seasonal_website\\tr_sa.xlsx")
View(pe_sa)
View(tr_sa)
View(pe_sa)
View(pe_sa)
pe_sa %>%
select(time,adjusted)
# PE
pe_sa <- pe_sa %>%
select(time,adjusted)
gdp_sa[3]
colnames(pe_sa) <- c(colnames(gdp_sa)[3],"PE")
View(gdp_nsa)
pe_sa <- readxl::read_excel(path = "C:\\Pedro Roveri Scatimburgo\\Dados\\seasonal_website\\pe_sa.xlsx")
tr_sa <- readxl::read_excel(path = "C:\\Pedro Roveri Scatimburgo\\Dados\\seasonal_website\\tr_sa.xlsx")
# PE
pe_sa_ifs <- pe_sa %>%
select(time,adjusted)
View(pe_sa_ifs)
colnames(pe_sa_ifs) <- c("year_quarter",colnames(gdp_sa)[3])
pe_sa_ifs$iso2c <- "PE"
colnames(gdp_ssa)
colnames(gdp_sa)
pe_sa_ifs <- select(iso2c,year_quarter,NGDP_R_K_SA_IX)
pe_Sa_ifs[,c(3,1,2)]
pe_sa_ifs[,c(3,1,2)]
pe_sa_ifs <- pe_sa_ifs[,c(3,1,2)]
# PE
pe_sa_ifs <- pe_sa %>%
select(time,adjusted)
colnames(pe_sa_ifs) <- c("year_quarter",colnames(gdp_sa)[3])
pe_sa_ifs$iso2c <- "PE"
pe_sa_ifs$year_quarter <- str_replace(string = pe_sa_ifs$year_quarter, pattern = ":", replacement = "-Q")
pe_sa_ifs <- pe_sa_ifs[,c(3,1,2)]
View(gdp_sa)
# TR
tr_sa_ifs <- tr_sa %>%
select(time,adjusted)
View(tr_sa_ifs)
colnames(tr_sa_ifs) <- c("year_quarter",colnames(gdp_sa)[3])
tr_sa_ifs$iso2c <- "TR"
tr_sa_ifs$year_quarter <- str_replace(string = tr_sa_ifs$year_quarter, pattern = ":", replacement = "-Q")
tr_sa_ifs <- tr_sa_ifs[,c(3,1,2)]
gdp <- bind_rows(gdp_sa,tr_sa_ifs,pe_sa_ifs)
View(gdp)
colnames(gdp)[3]
# Pivotamento para checar integridade
gdp_wide <- pivot_wider(data = gdp_wide, names_from = "iso2c", values_from = colnames(gdp)[3])
# Pivotamento para checar integridade
gdp_wide <- pivot_wider(data = gdp, names_from = "iso2c", values_from = colnames(gdp)[3])
View(gdp_wide)
View(gdp_wide)
View(gdp)
colnames(gdp)
gdp_growth <- gdp %>%
mutate(growth = lag(log(NGDP_R_K_SA_IX))-log(NGDP_R_K_SA_IX))
View(gdp_growth)
mutate(growth = lag(log(NGDP_R_K_SA_IX))-log(NGDP_R_K_SA_IX))
mutate(growth = lag(log(NGDP_R_K_SA_IX))-log(NGDP_R_K_SA_IX))
gdp_growth <- gdp %>%
group_by(iso2c) %>%
mutate(growth = lag(log(NGDP_R_K_SA_IX))-log(NGDP_R_K_SA_IX))
View(gdp)
View(gdp_growth)
gdp_growth <- gdp %>%
group_by(iso2c) %>%
mutate(growth = log(NGDP_R_K_SA_IX) - lag(log(NGDP_R_K_SA_IX)))
log(71.08231)-lag(log(70.84711
))
log(71.08231)-lag(log(70.84711))
log(gdp_growth$NGDP_R_K_SA_IX[2])
log(gdp_growth$NGDP_R_K_SA_IX[2])-log(gdp_growth$NGDP_R_K_SA_IX)[1]
log(gdp_growth$NGDP_R_K_SA_IX[88])-log(gdp_growth$NGDP_R_K_SA_IX)[87]
log(gdp_growth$NGDP_R_K_SA_IX[89])-log(gdp_growth$NGDP_R_K_SA_IX)[88]
save(gdp_growth, file = "data//gdp_growth.Rdata")
rm(list=ls())
